/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/summernote_editor_settings.js":
/*!****************************************************!*\
  !*** ./resources/js/summernote_editor_settings.js ***!
  \****************************************************/
/***/ (() => {

eval("/**\n * Settings for summernote editor.\n */\n$(document).ready(function () {\n  $(document).ready(function () {\n    var editor = $('#editor-body');\n    var configFull = {\n      lang: 'ru-RU',\n      // default: 'en-US'\n      shortcuts: false,\n      airMode: false,\n      minHeight: null,\n      // set minimum height of editor\n      maxHeight: null,\n      // set maximum height of editor\n      focus: false,\n      // set focus to editable area after initializing summernote\n      disableDragAndDrop: false,\n      callbacks: {\n        onImageUpload: function onImageUpload(files) {\n          uploadFile(files);\n        },\n        onMediaDelete: function onMediaDelete($target, editor, $editable) {\n          var fileURL = $target[0].src;\n          deleteFile(fileURL); // remove element in editor\n\n          $target.remove();\n        }\n      }\n    }; // Featured editor\n\n    editor.summernote(configFull); // Upload file on the server.\n\n    function uploadFile(filesForm) {\n      data = new FormData(); // Add all files from form to array.\n\n      for (var i = 0; i < filesForm.length; i++) {\n        data.append(\"files[]\", filesForm[i]);\n      }\n\n      $.ajax({\n        data: data,\n        type: \"POST\",\n        url: \"/ajax/uploader/upload\",\n        cache: false,\n        headers: {\n          'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        },\n        contentType: false,\n        processData: false,\n        success: function success(images) {\n          //console.log(images);\n          // If not errors.\n          if (typeof images['error'] == 'undefined') {\n            // Get all images and insert to editor.\n            for (var i = 0; i < images['url'].length; i++) {\n              editor.summernote('insertImage', images['url'][i], function ($image) {//$image.css('width', $image.width() / 3);\n                //$image.attr('data-filename', 'retriever')\n              });\n            }\n          } else {\n            // Get user's browser language.\n            var userLang = navigator.language || navigator.userLanguage;\n\n            if (userLang == 'ru-RU') {\n              var error = 'Ошибка, не могу загрузить файл! Пожалуйста, проверьте файл или ссылку. ' + 'Изображение должно быть не менее 500px!';\n            } else {\n              var error = 'Error, can\\'t upload file! Please check file or URL. Image should be more then 500px!';\n            }\n\n            alert(error);\n          }\n        }\n      });\n    } // Delete file from the server.\n\n\n    function deleteFile(file) {\n      data = new FormData();\n      data.append(\"file\", file);\n      $.ajax({\n        data: data,\n        type: \"POST\",\n        url: \"/ajax/uploader/delete\",\n        cache: false,\n        headers: {\n          'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        },\n        contentType: false,\n        processData: false,\n        success: function success(image) {//console.log(image);\n        }\n      });\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/summernote_editor_settings.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/summernote_editor_settings.js"]();
/******/ 	
/******/ })()
;